services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile.local
    volumes:
      - ./laravel:/var/www/html
    ports:
      - "81:80"
    depends_on: 
      - db
      # - redis
      # - minio
    container_name: ${PROJECT}_app
    hostname: app
    networks:
      - appnet

  db:
    image: postgres:15-bookworm
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: dbpass11
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - ./data/db:/var/lib/postgresql/data:rw
    container_name: ${PROJECT}_db
    hostname: db
    networks:
      - appnet

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    container_name: ${PROJECT}_adminer
    hostname: adminer
    networks:
      - appnet

  ngrok:
    container_name: ${PROJECT}_ngrock
    image: wernight/ngrok:latest
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
      - NGROK_PROTOCOL=http
      - NGROK_PORT=app:81
    depends_on:
      - app
    networks:
      - appnet
  # redis:
  #   build:
  #     context: .
  #     dockerfile: docker/redis/Dockerfile
  #   container_name: ${PROJECT}_redis
  #   hostname: redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - ./data/redis:/root/redis
  #   environment:
  #     - REDIS_PASSWORD=${REDIS_PASSWORD}
  #     - REDIS_PORT=6379
  #   #      - REDIS_DATABASES=16
  #   networks:
  #     - appnet

  # minio:
  #   image: minio/minio:RELEASE.2023-10-07T15-07-38Z
  #   container_name: ${PROJECT}_minio
  #   hostname: minio
  #   restart: unless-stopped
  #   volumes:
  #     - ./data/s3:/data
  #   ports:
  #     - 9000:9000
  #     - 9001:9001
  #   environment:
  #     MINIO_ROOT_USER: ${MINIO_USER}
  #     MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
  #   command: server --address ":9000" --console-address ":9001" /data
  #   networks:
  #     - appnet

  # mailhog:
  #   image: mailhog/mailhog
  #   container_name: ${PROJECT}_mailhog
  #   hostname: mailhog
  #   ports:
  #     - 8025:8025 # web ui
  #   networks:
  #     - appnet

networks:
  appnet:
    name: appnet
    driver: bridge
    external: true