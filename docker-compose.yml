services:
  app:
    image: $REGISTRY/${GROUP}/${PROJECT}/app:$TAG
    restart: always
    ports:
      - "81:80"
    environment:
      - DB_HOST=$DB_HOST
      - DB_PORT=$DB_PORT
      - DB_USERNAME=$DB_USERNAME
      - DB_DATABASE=$DB_DATABASE
      - DB_PASSWORD=$DB_PASSWORD
      - APP_URL=$APP_URL
    volumes:
      - ./data/storage:/var/www/html/storage:rw
    depends_on:
      - db
      - redis
      - minio
    container_name: app
    hostname: app
    networks:
      - appnet

  db:
    image: postgres:15-bookworm
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./data/db:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_DATABASE
    container_name: db
    hostname: db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-h", "localhost" ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s 
    networks:
      - appnet

  pgadmin:
    image: dpage/pgadmin4:7
    user: "0:0"
    container_name: pgadmin4
    hostname: pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_LOGIN}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:${PGADMIN_OPEN_PORT}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./data/pgadmin:/var/lib/pgadmin
    healthcheck:
      test: [ "CMD", "nc", "-vz", "${PGADMIN_HOST}", "${PGADMIN_OPEN_PORT}" ]
      interval: 10s
      timeout: 10s
      retries: 30
    networks:
      - appnet

  redis:
    image: $REGISTRY/${GROUP}/${PROJECT}/redis:$TAG
    restart: always
    container_name: redis
    hostname: redis
#    ports:
#      - "6379:6379"
    volumes:
      - ./data/redis:/root/redis
    environment:
#      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
#      - REDIS_DATABASES=16
    networks:
      - appnet

  minio:
    image: minio/minio:RELEASE.2023-10-07T15-07-38Z
    container_name: minio
    hostname: minio
    restart: always
    volumes:
      - ./data/s3:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    command: server --address ":9000" --console-address ":9001" /data
    healthcheck:
      test:
        [ 'CMD', 'curl', '-f', 'http://localhost:9001/minio/health/live' ]
      interval: 10s
      timeout: 10s
      retries: 30
    networks:
      - appnet

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    hostname: mailhog
    ports:
      - 8025:8025 # web ui
    networks:
      - appnet

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer
    restart: always
    ports:
      - "8000:8000"   # HTTP management UI
      - "9009:9000"   # HTTP API
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer_data:/data
    networks:
      - appnet    

  # frontend:
  #   image: $REGISTRY/${GROUP}/${GROUP}-frontend:${TAG}
  #   container_name: "frontend"
  #   restart: unless-stopped
  #   ports:
  #     - '80:3000'
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - /etc/timezone:/etc/timezone:ro
  #   networks:
  #     - appnet

networks:
  appnet:
    name: appnet
    driver: bridge
    external: false